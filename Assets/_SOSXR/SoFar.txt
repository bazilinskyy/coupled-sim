11-04-2024

Got XR3 to behave much better through Varjo Base 4.2.1. Less restart / diva issues.

Now reassigning shortcuts, because 'R' is resetting the camera position. No longer directly unto floor.
However, it does not match well with the 'Press R to Reverse'. 
I know I removed the CameraCounter.cs from our prefabs, but just to be sure I've also set a bool in the inspector to turn it off. 
This is because the CameraCounter gets spawned automatically. 
It clearly is the Cameracounter that's doing this.

Problem is also that CameraCounter is calling something that's obsolete, and only works in stationary, not roomscale.
I'm going to keep the CameraCounter's implementation off, and set a keycode for my own recentering.  
---> RECENTERING IS NOW NUM-0 (so the '0' key on the numpad)

Weird thing was that RecenterXROrigin.cs kept getting disabled in Start. No indication as to why or where.
Only when I removed the component from the prefab, and re-added it, did it get fixed. Now the thing stays enabled, 
and we can use '0' to RecenterAndFlatten. 

Updated VarjoEyeTracking to allow enabling/disabling moving of eyeballs. This should be disabled in our model.
Checked with model: eyes rotate according to tracking. Will need a second person with eyeballs to help fine-tune.

Will start making sure the passenger can have this too. 

Before I got to the passenger, worked with Vennila on the eye tracking of the driver. It was behaving strangely. 
It doesn't yet move in the same direction real-life eyeballs are moving, but something like this:
Left = down
Down = left
Right = up
up = right
Worked a little with the offset to see what's what, because also the model's eyeball is actually two-sided. It could 
be that we're looking at the back of the eyeball instead of the front.
Should test next time by placing coloured markers on both the front and the back of the eyeball. 

Also need to get more Varjo info.


Ttyl!

Maarten



--------------------------


29-02-2024
Moved worldlogger into uncommented file and got back the working version via Git. 
Removed eye-ball-rotation from animation clip (that was 'blocking' eyeball for varjo)
Scratch that last bit. The Eyeball rotation in the animation clip wasn't the issue. 
The thing was that the eyeball movement from Varjo needed to be done in LateUpdate, that makes it happen AFTER animation
I applied an offset to the thing, because the model is 84.354 off on Z.
IT now at least looks forward, but doesn't yet match my eye movement (e.g. looks down right when I am looking up)
However, here I really need a secodn pair of eyes, since I cannot both see and adjust the rotation of the offset to match my own eyemovements

Gtg for now.
Best 
Maarten



19-02-2024

### HMD / CONTROLLER CONTROLLED AVATAR ###
I got the passenger very much hooked unto the XR rig. Hands and Face move along to where the HMD / controllers are.
It's a little rudimentary (e.g. controllers map to wrists, which is just a little weird) but that is really details for some later stage.
At some point we're gonna have to do something about the draw-distance, or possibly layers. Since it is a littl uncomfortable 
to gaze into your own eyeballs. Also, the rigs should have limits. There's some definite exorcist vibes going on now. 

Driver has now HMD positioning too. Controllers naturally do not sync his hands, since the good man needs hands on the wheel at all times. 

The 'Press R to enter floorLevel hell' was caused by the CameraCounter.cs script. I don't think it did anything majestic, 
so I took it off the prefabs we're using.


### EYE TRACKING ### 
Started new branch SOSXR_Varjo. Here I can test a little with the eyetracking from Varjo. 

Ok, the eyetrackingexample is quite clear, is good starting point. Also good: their HDRP Sample thing. That's a separate Unity Project.

Eyeball-rotation from Varjo interferes with the animator or the rig. Actually the other way around --> rig (or animator?) interferes with Varjo. 
When animator off, rig doesn't work, but Varjo can move the eyeballs. Requires fixing. 

That brings me to: moving the eyeballs. That really shouldn't happen. Is creepy AF. A little rotation is good, a little move is
baaaad. But that's a possibility to change in the Varjo SDK:
if (gazeData.leftStatus != VarjoEyeTracking.GazeEyeStatus.Invalid)
{
    leftEyeTransform.position = xrCamera.transform.TransformPoint(gazeData.left.origin);
    leftEyeTransform.rotation = Quaternion.LookRotation(xrCamera.transform.TransformDirection(gazeData.left.forward));
}

That's simply removing that position line. I think. 

That's for next time to do :). 

Next time: get eyeballs rotate nicely with gaze. This shouldn't be a lot of work. 
Then test whether that works (you need a second set of... well.. eyeballs,  
because the system de-inits the eye-tracker as soon as you remove your face from the HMD). 

Then, we need to get that data synced.

I'm 85% confident that these above things can be done within about 1 day work. 

After that there's the creating the AIOs, which is little to no work at all.
After that there's the logging the gaze data in some reasonable way. This will be unknown amount of work, since I'm not 
familiar at all with the data logging procedure. Pavlo: any ideas?


Best, 
Maarten





15-02-2024

Goal for today: go from 'car as passenger' to 'passenger as passenger'. 

I'm encountering two errors, one dealing with Unity Transport, the other with a Stack Overflow. Both seem to be able to overcome by updating:
    https://gamedev.stackexchange.com/questions/186134/a-native-collection-has-not-been-disposed-resulting-in-a-memory-leak-enable-fu
    https://issuetracker.unity3d.com/issues/resetting-event-queue-with-pending-events-error-thrown-after-connecting-client-to-server
However I'll wait with updating. Don't know where it's coming from, it wasn't there last week, and there may be something simpler going on. 

Now there's passengers inside the car who are actually passengers. Their prefab is still a mess and includes so much Car stuff. Will clean that up now.

Glad I didn't update the UnityTransport package. The issues seemed to have gone away once I picked up all the projects' null-errors.
Null errors dealing with car-lights etc, which are caused because a passenger doesn't really have a personal own spawned car, ergo no lights.
Once I dealt with all those, the connection errors seemed to have gone away. 

Passengers are now happily in the car. I first disabled all car-components 'around them', and then once that was happy, I deleted all that. 
The passenger has new 'Passenger' layer, which collides with nothing. 
His RB cannot be kinematic, but can do !Gravity.

They do have an AnimationRig, which needs some placing. 
I added new targets for Head, Hand and Hand. The Head has two constraints: a pos/rot and a lookat. 
I don't think the lookat is needed for what we're after. I left it on there, but set the weight to 0. 
The passengers respond fairly well to their rigs. The rig is not yet connected to HMD/Controllers

I noticed that only 192.168.0.11 can be host? 12 at least doesn't want to just yet. Maybe due to some firewall setting?

I will now start making sure that the VR portion of this experience works at least somewhat.

XR works in general. A passenger can have an HMD, as can the driver. Both HMDs neatly drive along with a driven car. 
Need to test whether two passengers can both have an HMD. Then need to test whether 3 in car can all have HMD. 

'R'-key is clearly a button to yoink the HMD to floor level. Need to figure out why that's there, and whether we can get rid of it. 

The positioning of the HMD camera is horrendous. I'll first try to set it to the location of the face-target.

The repositioning of the HMD camera now works to a degree. We can reposition&flatten it to another object, which we can then add to the Prefab.
There's a Target_XROrigin thing on the prefab, with a tag, and the RecenterXROrigin component will go and look for that.
A weird thing that happens is that because there's this phase of initialisation prior to hitting "Start Simulation", the OnEnable method gets called and then 
I think there's some messing around with the Time settings? Maybe the program is paused that way. Anyway, doesn't matter, but it does provide some interesting thing for the 
recenter script to figure out when it should run. 

That's all for today now. 
Bye
Maarten




---------------------------


08-02-2024

You can either have 1 human passenger, or 2 cars as passenger, inside your manually driven car...

You can have 1 passenger (clone of pedestrian), as a passenger is fine. One manual car and the passenger sync perfect.
However, 2 is too many, then then they don't sync over the network. 

This is also the case if you run with 3 pedestrians. None sync. 

However, if you have three manually driven cars, all is good. They sync perfect.

So I tried making a car as a pedestrian: "Driven_Passenger_Madtest".... and this works!
To make this work, it needs two separate spawn points, so that they're not colliding. 
Needs to have the tag "ManualCar" removed, and in the PlayerAvatar set it as 'Driven_Avatar', 
so that the PlayerSystem can parent it to the 'real' car. 

Conclusion:
There's simply something about the prefab of the pedestrian which is conflicting with it being used as a 2nd passenger.

Next steps: 
Create a prefab (maybe stripped down of the Hatchback car?) for a passenger which works, even when having 2 of them in the same manual car. 



Best, 
Maarten
